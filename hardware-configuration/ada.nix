# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  nixpkgs.config.allowBroken = true;
  imports =
    [
       (modulesPath + "/installer/scan/not-detected.nix")
       ./capabilities/x-home-assistant.nix
       ./capabilities/x-kerberos.nix
       ./capabilities/x-network-storage.nix
       ./capabilities/x-yubi.nix
    ];

  networking.hostName = "ada";
  boot.initrd.availableKernelModules = [ "ehci_pci" "ahci" "sd_mod" "sr_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.loader.efi.efiSysMountPoint = lib.mkForce "/boot";

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/a8220418-2d42-46ba-b908-c3de38f3acaf";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/680D-8E98";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  environment.systemPackages = with pkgs; [
     grafana
     spotify
     python3 
  ];


  services.x-home-assistant.enable = true;
  services.x-network-storage.enable = true;
  services.x-kerberos.enable = true;
  services.x-yubi.enable = true;
}
